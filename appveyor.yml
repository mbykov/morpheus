# # Test against the latest version of this Node.js version
# environment:
#   nodejs_version: "7"

# # Install scripts. (runs after repo cloning)
# install:
#   # Get the latest stable version of Node.js or io.js
#   - ps: Install-Product node $env:nodejs_version
#   # install modules
#   - npm install

# # Post-install test scripts.
# test_script:
#   # Output useful info for debugging.
#   - node --version
#   - npm --version
#   # run tests
#   # - npm test

# # Don't actually build.
# # build: off
# build:
#   project: './'
#   parallel: true
#   verbosity: minimal

environment:
  GH_TOKEN:
    secure: 14ALPfeLn40YUtMzUuY2YcJajVec9zZa3NA6ONgKT6U6El6PjyPXntFmkb15TjgS

platform:
  - x64

cache:
  - node_modules
  # - app\node_modules
  # - '%APPDATA%\npm-cache'
  # - '%USERPROFILE%\.electron'

# init:
#   - git config --global core.autocrlf input

install:
  - ps: Install-Product node 7 x64
  # - git reset --hard HEAD
  # - npm i electron-rebuild
  # - npm i electron-prebuilt
  - npm i electron-builder
  - npm install
  # - npm prune

build_script:
  - node --version
  - npm --version
  - npm install
  - npm run rebuild
  - npm run release
  # - npm prune

# build: off

test: off

# deploy:
#   # release: $(APPVEYOR_REPO_TAG_NAME)
#   #   # description: ''
#   provider: GitHub
#   auth_token:
#     secure: 14ALPfeLn40YUtMzUuY2YcJajVec9zZa3NA6ONgKT6U6El6PjyPXntFmkb15TjgS
#     #   artifact: felix-$(FLX_VERSION)-msvc-win64.zip
#   # artifact: /.*\.exe/
#   draft: true
# #   prerelease: false
#   # on:
#     # appveyor_repo_tag: true

# # https://www.appveyor.com/docs/deployment/github/
